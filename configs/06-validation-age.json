{
  "id": "06-validation-age",
  "name": "Validation d'Âge",
  "description": "Écrire une méthode qui prend un âge (int) et retourne true si la personne est majeure (18 ans ou plus), false sinon.",
  "testInputs": [
    {"value": "17", "description": "Âge mineur (retourne false)"},
    {"value": "18", "description": "Âge limite (retourne true)"},
    {"value": "25", "description": "Âge majeur (retourne true)"},
    {"value": "-5", "description": "Âge invalide (à gérer)"}
  ],
  "rules": {
    "requiredMethods": [
      {
        "name": "estMajeur",
        "params": [
          "int"
        ],
        "returnType": "boolean"
      }
    ],
    "allowedOperators": [
      ">=",
      "<"
    ],
    "requiredControlStructures": [
      "if"
    ],
    "checkVariableScope": false,
    "checkNamingConventions": [],
    "customPatterns": [
      {
        "description": "Vérification de la condition age >= 18",
        "pattern": "return\\s+age\\s*>=\\s*18;",
        "required": false
      },
      {
        "description": "Bonus : Vérifier si l'âge est valide (>= 0)",
        "errorMessage": "Considérez la gestion d'un âge négatif comme invalide.",
        "pattern": "if\\s*\\(\\s*age\\s*<\\s*0\\s*\\)",
        "required": false
      }
    ],
    "requiredDomainChecks": [],
    "mathFunctions": []
  }
}